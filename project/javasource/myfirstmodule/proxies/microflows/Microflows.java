// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the MyFirstModule module
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_BloodGroup_CreateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MyFirstModule.ACT_BloodGroup_Create");
		return builder;
	}

	public static void aCT_BloodGroup_Create(IContext context)
	{
		aCT_BloodGroup_CreateBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_BloodGroupEditBuilder(
		myfirstmodule.proxies.BloodGroup _bloodGroup
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MyFirstModule.ACT_BloodGroupEdit");
		builder = builder.withParam("BloodGroup", _bloodGroup);
		return builder;
	}

	public static void aCT_BloodGroupEdit(
		IContext context,
		myfirstmodule.proxies.BloodGroup _bloodGroup
	)
	{
		aCT_BloodGroupEditBuilder(
				_bloodGroup
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Customer_CreateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MyFirstModule.ACT_Customer_Create");
		return builder;
	}

	public static void aCT_Customer_Create(IContext context)
	{
		aCT_Customer_CreateBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_DeleteBloodGroupBuilder(
		myfirstmodule.proxies.BloodGroup _bloodGroup
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MyFirstModule.ACT_DeleteBloodGroup");
		builder = builder.withParam("BloodGroup", _bloodGroup);
		return builder;
	}

	public static void aCT_DeleteBloodGroup(
		IContext context,
		myfirstmodule.proxies.BloodGroup _bloodGroup
	)
	{
		aCT_DeleteBloodGroupBuilder(
				_bloodGroup
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Location_CreateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MyFirstModule.ACT_Location_Create");
		return builder;
	}

	public static void aCT_Location_Create(IContext context)
	{
		aCT_Location_CreateBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_LocationLevel_CreateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MyFirstModule.ACT_LocationLevel_Create");
		return builder;
	}

	public static void aCT_LocationLevel_Create(IContext context)
	{
		aCT_LocationLevel_CreateBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder myFirstLogicBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("MyFirstModule.MyFirstLogic");
		return builder;
	}

	public static void myFirstLogic(IContext context)
	{
		myFirstLogicBuilder().execute(context);
	}
}
